"""Experiment: Determine similarities between D8 and Y(2+2) groups
"""

from sympy.combinatorics import DihedralGroup, PermutationGroup, Permutation

from mathexp import perm_groups


def create_d8():
	"""Create D8 group"""
	return DihedralGroup(4)


def create_y22():
	"""Create Y(2+2) group

	Young Symmetrizer group generated by Riemann Tensor index symmetries
	"""
	return PermutationGroup([
		Permutation(1, 2),  # symmetrize 1st and 2nd indices
		Permutation(3, 4),  # symmetrize 3rd and 4th indices
		Permutation(1, 3)(2, 4)  # symmetrize 1st and 2nd pairs of indices, (1 and 2) with (3 and 4)
	])


def main():
	"""Main function"""
	D8 = create_d8()
	Y22 = create_y22()

	possible = perm_groups.is_iso_possible(D8, Y22)
	print(f"Is isomorphism possible? {possible}")

	print("Finding isomorphism by element orders")
	iso = perm_groups.find_iso_by_element_orders(D8, Y22)

	if iso is None:
		print("No isomorphism found by element orders")
	else:
		print("Isomorphism found by element orders! Printing isomorphism")
		for k, v in iso.items():
			print(f"{k} -> {v}")


if __name__ == '__main__':
	main()
